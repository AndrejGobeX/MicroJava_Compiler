// generated with ast extension for cup
// version 0.8
// 19/0/2022 11:25:5


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(Mulop Mulop);
    public void visit(MethodDecl MethodDecl);
    public void visit(Relop Relop);
    public void visit(MethodType MethodType);
    public void visit(DesignatorElem DesignatorElem);
    public void visit(ConstAss ConstAss);
    public void visit(ExprError ExprError);
    public void visit(StatementList StatementList);
    public void visit(ClassName ClassName);
    public void visit(ConditionHelper ConditionHelper);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(ExtendsHelper ExtendsHelper);
    public void visit(CondTerm CondTerm);
    public void visit(VarAss VarAss);
    public void visit(DeclList DeclList);
    public void visit(Term Term);
    public void visit(VarAssList VarAssList);
    public void visit(Condition Condition);
    public void visit(Terms Terms);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(DesignatorList DesignatorList);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Decl Decl);
    public void visit(ConstAssList ConstAssList);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(ClassDecl ClassDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(SingleStatement SingleStatement);
    public void visit(FormPars FormPars);
    public void visit(MulopM MulopM);
    public void visit(MulopD MulopD);
    public void visit(MulopS MulopS);
    public void visit(AddopM AddopM);
    public void visit(AddopP AddopP);
    public void visit(RelopLE RelopLE);
    public void visit(RelopLT RelopLT);
    public void visit(RelopGE RelopGE);
    public void visit(RelopGT RelopGT);
    public void visit(RelopNeq RelopNeq);
    public void visit(RelopEq RelopEq);
    public void visit(DesignatorEExpr DesignatorEExpr);
    public void visit(DesignatorEIdent DesignatorEIdent);
    public void visit(DesignatorListE DesignatorListE);
    public void visit(DesignatorList1 DesignatorList1);
    public void visit(DesignatorIdentThis DesignatorIdentThis);
    public void visit(DesignatorIdentSuper DesignatorIdentSuper);
    public void visit(DesignatorIdentIdent DesignatorIdentIdent);
    public void visit(Designator Designator);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNewAr FactorNewAr);
    public void visit(FactorNew FactorNew);
    public void visit(FactorBoolConst FactorBoolConst);
    public void visit(FactorCharConst FactorCharConst);
    public void visit(FactorNumConst FactorNumConst);
    public void visit(FactorDesignatorActPars FactorDesignatorActPars);
    public void visit(FactorDesignatorNo FactorDesignatorNo);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(Term2 Term2);
    public void visit(Term1 Term1);
    public void visit(ExprError2 ExprError2);
    public void visit(ExprError1 ExprError1);
    public void visit(Expr2 Expr2);
    public void visit(Expr1 Expr1);
    public void visit(Terms2 Terms2);
    public void visit(Terms1 Terms1);
    public void visit(CondFactR CondFactR);
    public void visit(CondFactE CondFactE);
    public void visit(CondTerm2 CondTerm2);
    public void visit(CondTerm1 CondTerm1);
    public void visit(Condition2 Condition2);
    public void visit(Condition1 Condition1);
    public void visit(ConditionError ConditionError);
    public void visit(ConditionOK ConditionOK);
    public void visit(ActPars2 ActPars2);
    public void visit(ActPars1 ActPars1);
    public void visit(DesignatorStatementDec DesignatorStatementDec);
    public void visit(DesignatorStatementInc DesignatorStatementInc);
    public void visit(DesignatorStatementNo DesignatorStatementNo);
    public void visit(DesignatorStatementActPars DesignatorStatementActPars);
    public void visit(DesignatorStatementAssign DesignatorStatementAssign);
    public void visit(Statements Statements);
    public void visit(SingleStatementPrintNum SingleStatementPrintNum);
    public void visit(SingleStatementPrint SingleStatementPrint);
    public void visit(SingleStatementRead SingleStatementRead);
    public void visit(SingleStatementReturnExpr SingleStatementReturnExpr);
    public void visit(SingleStatementReturn SingleStatementReturn);
    public void visit(SingleStatementContinue SingleStatementContinue);
    public void visit(SingleStatementBreak SingleStatementBreak);
    public void visit(SingleStatementDoWhile SingleStatementDoWhile);
    public void visit(SingleStatementIf SingleStatementIf);
    public void visit(SingleStatementIfElse SingleStatementIfElse);
    public void visit(SingleStatementDesignator SingleStatementDesignator);
    public void visit(StatementListE StatementListE);
    public void visit(StatementList1 StatementList1);
    public void visit(StatementStatements StatementStatements);
    public void visit(StatementSingle StatementSingle);
    public void visit(FormParsError2 FormParsError2);
    public void visit(FormParsError1 FormParsError1);
    public void visit(FormPars2 FormPars2);
    public void visit(FormPars1 FormPars1);
    public void visit(MethodDeclListE MethodDeclListE);
    public void visit(MethodDeclList1 MethodDeclList1);
    public void visit(MethodTypeVoid MethodTypeVoid);
    public void visit(MethodType1 MethodType1);
    public void visit(MethodName MethodName);
    public void visit(MethodDeclTypeFormPars MethodDeclTypeFormPars);
    public void visit(MethodDeclType MethodDeclType);
    public void visit(Type Type);
    public void visit(RecordName RecordName);
    public void visit(RecordDecl RecordDecl);
    public void visit(ExtendsHelperError ExtendsHelperError);
    public void visit(ExtendsHelper1 ExtendsHelper1);
    public void visit(ClassNameExtends ClassNameExtends);
    public void visit(ClassNameNo ClassNameNo);
    public void visit(ClassDeclConstructor ClassDeclConstructor);
    public void visit(ClassDeclMethods ClassDeclMethods);
    public void visit(ClassDeclNothing ClassDeclNothing);
    public void visit(VarAssError VarAssError);
    public void visit(VarAssBr VarAssBr);
    public void visit(VarAssNo VarAssNo);
    public void visit(VarDeclListE VarDeclListE);
    public void visit(VarDeclList1 VarDeclList1);
    public void visit(VarAssListE VarAssListE);
    public void visit(VarAssList1 VarAssList1);
    public void visit(VarDeclError VarDeclError);
    public void visit(VarDeclOK VarDeclOK);
    public void visit(ConstAssError ConstAssError);
    public void visit(ConstAssChar ConstAssChar);
    public void visit(ConstAssBool ConstAssBool);
    public void visit(ConstAssNum ConstAssNum);
    public void visit(ConstAssListE ConstAssListE);
    public void visit(ConstAssList1 ConstAssList1);
    public void visit(ConstDeclError ConstDeclError);
    public void visit(ConstDeclOK ConstDeclOK);
    public void visit(DeclRecord DeclRecord);
    public void visit(DeclClass DeclClass);
    public void visit(DeclVar DeclVar);
    public void visit(DeclConst DeclConst);
    public void visit(DeclListE DeclListE);
    public void visit(DeclList1 DeclList1);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
